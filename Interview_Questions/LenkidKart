1 .LendingKart
--------------------
- RDS
	- parameter group
	- read-replica
- AWS CLI
- EC2 
	- INstance type
	- r3 type
- Cloud Front
- Clowd watch
	- write a aws cli script to craete a cloud watch alerts
- Route 53

- How to interact to the client with an application ??
- How to create a ssh key file for a single user??





2. Aricent
---------------------
- How to write the loops in Ansible playbook ??
- How to get the latest changes from mainbranch to local , with out forking to the new repo ??
- what are the environment variables in Jenkins??
- Write a Dockerfile to install the initial things to setup ??
- How to check, In which server got error by using LB server??
- What is Horizonatl and Vertical Scale Out ??



3. Infosys
---------------------
- Different types of EBS Stoges in AWS ??
- Grep all contents of a file except one or two "strings" ??
- JSON syntax explanation ??
- CronJob Schedule ??
- Write a Marathon.json file ??
- Write a Docker-compose and docker-swarm file ??
- If the docker container got stopped . Then how to recover the data from that container ??
- What is ScaleOut in Docker ??
- What is BlueGreen Deployment ??


4. My Interview_Questions
---------------------------

-  Write a Jenkins Pipeline script .
-  Write a Docker file 
-  Write an Ansible playbook to install a package based on distribution ??





- Nagios/grafana
- Kubernates

- $#,#!,#0 
- if-loop
- NGINXN

   NGINX is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability. In addition to its HTTP server capabilities, NGINX can also function as a proxy server for email (IMAP, POP3, and SMTP) and a reverse proxy and load balancer for HTTP, TCP, and UDP servers.

	ginx Reverse proxy
	- nginx modeule for reverse proxy
		1.Gzip Module
		2. Load_module
		3.Worker_module
		4. Proxy_Pass
				 location /get-ops-data {
	        			proxy_pass https://hc4t04397.itcs.hpecorp.net:8091;
	           }

	- How can we reload nginx configuration with out restart ??
		##### nginx -s reload


- Docker network,Volume,Containers
- Top 10 Ansible Modules:
	- yum,group,user,become,become_method,get_url,command,file,template,notify,handler,copy,service, when,


							---
						- name: Install Java 1.7
						  yum: name=java-1.7.0-openjdk state=present

						- name: add group "tomcat"
						  group: name=tomcat

						- name: add user "tomcat"
						  user: name=tomcat group=tomcat home=/usr/share/tomcat createhome=no
						  become: True
						  become_method: sudo

						- name: Download Tomcat
						  get_url: url=http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.61/bin/apache-tomcat-7.0.61.tar.gz dest=/opt/apache-tomcat-7.0.61.tar.gz

						- name: Extract archive
						  command: chdir=/usr/share /bin/tar xvf /opt/apache-tomcat-7.0.61.tar.gz -C /opt/ creates=/opt/apache-tomcat-7.0.61

						- name: Symlink install directory
						  file: src=/opt/apache-tomcat-7.0.61 path=/usr/share/tomcat state=link

						- name: Change ownership of Tomcat installation
						  file: path=/usr/share/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes

						- name: Configure Tomcat server
						  template: src=server.xml dest=/usr/share/tomcat/conf/
						  notify: restart tomcat

						- name: Configure Tomcat users
						  template: src=tomcat-users.xml dest=/usr/share/tomcat/conf/
						  notify: restart tomcat

						- name: Install Tomcat init script
						  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755

						- name: Start Tomcat
						  service: name=tomcat state=started enabled=yes

						- name: deploy iptables rules
						  template: src=iptables-save dest=/etc/sysconfig/iptables
						  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"
						  notify: restart iptables

						- name: insert firewalld rule for tomcat http port
						  firewalld: port={{ http_port }}/tcp permanent=true state=enabled immediate=yes
						  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

						- name: insert firewalld rule for tomcat https port
						  firewalld: port={{ https_port }}/tcp permanent=true state=enabled immediate=yes
						  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

						- name: wait for tomcat to start
						  wait_for: port={{http_port}}







